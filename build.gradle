buildscript {
	ext {
		springBootVersion = '2.0.6.RELEASE'
	}
	repositories {
		//url "http://localhost:8081/repository/maven-public/" 
		maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.tsingglobal'
version = '0.0.2-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	//url "http://localhost:8081/repository/maven-public/" 
		maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
}

processResources {
	from('src/main/java') {
	    include '**/*.xml'
	}
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-freemarker')
	//implementation('org.springframework.boot:spring-boot-starter-security')	
	implementation('org.springframework.boot:spring-boot-starter-web'){
		exclude(module: 'spring-boot-starter-tomcat')
	}
	implementation('org.springframework.boot:spring-boot-starter-undertow:2.0.6.RELEASE')
	implementation('org.xerial:sqlite-jdbc:3.25.2')
	implementation('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2'){
		exclude(module: 'tomcat-jdbc')
	}
	implementation('com.zaxxer:HikariCP:3.2.0')
	implementation('com.alibaba:fastjson:1.2.51')
	implementation('org.mybatis.generator:mybatis-generator-core:1.3.7')
	implementation('com.github.pagehelper:pagehelper-spring-boot-starter:1.2.9')
	//implementation('com.github.pagehelper:pagehelper:5.1.2')
	
	// https://mvnrepository.com/artifact/javax.mail/javax.mail-api
	//compile group: 'javax.mail', name: 'javax.mail-api', version: '1.6.2'
	// https://mvnrepository.com/artifact/com.sun.mail/javax.mail
compile group: 'com.sun.mail', name: 'javax.mail', version: '1.6.2'

	
	
	
	implementation('org.webjars:bootstrap:3.3.5')
	implementation('org.webjars:jquery:3.1.1')
	runtimeOnly('org.springframework.boot:spring-boot-devtools')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.springframework.security:spring-security-test')
}

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}
